version: '3.8'

services:
  # FastAPI Application Container
  fastapi-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: {{ app_name | default('fastapi-app') }}
    ports:
      - "{{ app_port | default('8000') }}:{{ app_port | default('8000') }}"
    environment:
      - APP_NAME={{ app_name | default('FastAPI Application') }}
      - DEBUG={{ debug | default('False') }}
      - ENVIRONMENT={{ environment | default('production') }}
      - SECRET_KEY={{ secret_key | default('your-super-secret-key') }}
{% if database_type == 'postgresql' or database_type == 'relational' %}
      - DATABASE_URL=postgresql://{{ db_user | default('postgres') }}:{{ db_password | default('password') }}@postgres:5432/{{ db_name | default('fastapi_db') }}
{% elif database_type == 'mysql' %}
      - DATABASE_URL=mysql+pymysql://{{ db_user | default('root') }}:{{ db_password | default('password') }}@mysql:3306/{{ db_name | default('fastapi_db') }}
{% elif database_type == 'mongodb' or database_type == 'document' %}
      - MONGODB_URL=mongodb://{{ mongo_user | default('admin') }}:{{ mongo_password | default('password') }}@mongodb:27017/{{ mongo_db_name | default('fastapi_db') }}?authSource=admin
{% endif %}
{% if use_redis %}
      - REDIS_URL=redis://redis:6379/0
{% endif %}
    depends_on:
{% if database_type == 'postgresql' or database_type == 'relational' %}
      - postgres
{% elif database_type == 'mysql' %}
      - mysql
{% elif database_type == 'mongodb' or database_type == 'document' %}
      - mongodb
{% endif %}
{% if use_redis %}
      - redis
{% endif %}
    volumes:
      - ./app:/app
      - {{ upload_dir | default('./uploads') }}:/app/uploads
    networks:
      - fastapi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:{{ app_port | default('8000') }}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

{% if database_type == 'postgresql' or database_type == 'relational' %}
  # PostgreSQL Database Container
  postgres:
    image: postgres:{{ postgres_version | default('15-alpine') }}
    container_name: {{ app_name | default('fastapi') }}-postgres
    environment:
      - POSTGRES_USER={{ db_user | default('postgres') }}
      - POSTGRES_PASSWORD={{ db_password | default('password') }}
      - POSTGRES_DB={{ db_name | default('fastapi_db') }}
    ports:
      - "{{ db_port | default('5432') }}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - fastapi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ db_user | default('postgres') }}"]
      interval: 10s
      timeout: 5s
      retries: 5

{% elif database_type == 'mysql' %}
  # MySQL Database Container
  mysql:
    image: mysql:{{ mysql_version | default('8.0') }}
    container_name: {{ app_name | default('fastapi') }}-mysql
    environment:
      - MYSQL_ROOT_PASSWORD={{ db_password | default('password') }}
      - MYSQL_DATABASE={{ db_name | default('fastapi_db') }}
      - MYSQL_USER={{ db_user | default('fastapi_user') }}
      - MYSQL_PASSWORD={{ db_password | default('password') }}
    ports:
      - "{{ db_port | default('3306') }}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - fastapi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

{% elif database_type == 'mongodb' or database_type == 'document' %}
  # MongoDB Database Container
  mongodb:
    image: mongo:{{ mongo_version | default('7.0') }}
    container_name: {{ app_name | default('fastapi') }}-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME={{ mongo_user | default('admin') }}
      - MONGO_INITDB_ROOT_PASSWORD={{ mongo_password | default('password') }}
      - MONGO_INITDB_DATABASE={{ mongo_db_name | default('fastapi_db') }}
    ports:
      - "{{ mongo_port | default('27017') }}:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - fastapi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
{% endif %}

{% if use_redis %}
  # Redis Cache Container
  redis:
    image: redis:{{ redis_version | default('7-alpine') }}
    container_name: {{ app_name | default('fastapi') }}-redis
    ports:
      - "{{ redis_port | default('6379') }}:6379"
    volumes:
      - redis_data:/data
    networks:
      - fastapi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
{% if redis_password %}
    command: redis-server --requirepass {{ redis_password }}
{% endif %}
{% endif %}

{% if use_nginx %}
  # Nginx Reverse Proxy
  nginx:
    image: nginx:{{ nginx_version | default('alpine') }}
    container_name: {{ app_name | default('fastapi') }}-nginx
    ports:
      - "{{ nginx_port | default('80') }}:80"
      - "{{ nginx_ssl_port | default('443') }}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - fastapi-app
    networks:
      - fastapi-network
    restart: unless-stopped
{% endif %}

# Docker Networks
networks:
  fastapi-network:
    driver: bridge

# Docker Volumes
volumes:
{% if database_type == 'postgresql' or database_type == 'relational' %}
  postgres_data:
    driver: local
{% elif database_type == 'mysql' %}
  mysql_data:
    driver: local
{% elif database_type == 'mongodb' or database_type == 'document' %}
  mongodb_data:
    driver: local
{% endif %}
{% if use_redis %}
  redis_data:
    driver: local
{% endif %}